html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
  }

  *,
  *::after,
  *::before {
    box-sizing: inherit;
  }

  a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
  }

  p {
    margin: 0;
  }

  h2 {
    margin-top: 50vh;
    text-align: center;
  }

  img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
  }

  .menu {
    margin-bottom: 100vh;
    font-size: 125%;
  }

  .menu li {
    margin-bottom: 1rem;
  }

  .container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
  }

  .item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
  }
  /* Grid Explicito */
  .grid-explicit{
    /* ativamos el grid con el display */
    display: grid;
    /* para ativar las culunas y filas usamos grid-template-column y grid-template-row que pueder reciber como valor de medida tanto %, px , rem y fr(fraciones) */
    /* Esta es una grid de (3c x 3r) */
    grid-template-rows: 2rem 20vh 30%;
    grid-template-columns: 50% 100px 1fr;

    /* para formar una quadricula mais rapidamente usamos la function repeat()que recibe com primer paramentro el numero neste caso de columnas y como el segundo el tama√±o que tendera estas colunas  */
    /* esta es una grid de(5c x 4r) */
    grid-template-columns: repeat(5,20%);
    grid-template-rows: repeat(4,25%);
        /* intercanbiar auto/25% */
    grid-template-rows: repeat(4,auto);
    /* la fr(fracion) dive las filas y colunas en proporciones iguales, pero repeta el contenido del item */
    grid-template-columns: repeat(5,1fr);
    grid-template-rows: repeat(4,1fr);

    /* podemos usar el reater par definer en medio de otras medidas */
    /* Grid de (4c x 5r) */
    grid-template-columns:20% repeat(2,30%) 20%;
    grid-template-rows:repeat(5,auto);

    /* Tenemos las propriedade row-gap y column-gap que tiene como shorthand gap: para colocarmos espacios ente colunas y filar, seria como un margin dentro de grid */
    column-gap: 1rem;
    row-gap: 2px;
    /* gap: row column */
    gap: 1vh 1vw;
    gap:0%;
  }

  .grid-explicit .item:nth-child(10){
   background-color: lightgray;
    /* El grid-row-start y end funcina para posicionar un elemento paseado en las lineas de la grid, a igual que el grid-column-start y end  */
    grid-row-start:2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;
    /* el shorcort de estas propriedade es grid-row y  grid-column */
    
    grid-row: 2/3;
    grid-column: 3/5;

    /* el shorthand de las dos propriedades seria grid-area que empieza com grid-row y despues seria el column */
    grid-area:2/3/3/5;
  }
  .grid-explicit .item:nth-child(12){
    background-color: lightgreen;
    /* usamos la palavra span para referirnos al lugar que se encontra el elemento selecionado hasta donde queremos que ocupe, lo podemos usar con grid-row y grid-column */
    grid-row: span 2;
    grid-column: span 2;
  }
  .grid-explicit .item:nth-child(15){
    /* lo podemos indicar lo posicion de comiezo ante de mandale espandir */
    grid-row:1/ span 2;
    grid-column:1/span 2;
  }
  /* quadricula 3x3 */
  .grid-line-names{
    display: grid;
    grid-template-rows:repeat(3,1fr);
    grid-template-columns: repeat(3,1fr);
    /* Tenemos aqui una grid de 3x3 que seria 4 lineas x 4 lineas */
    /* Para nombrar las lineas, los hacamos al invocar el grid-template y usamos los []*/
    /* no se usa  " , " entre las criaciones de lineas  */
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr[linea-c3] 1fr [linea-c4];
    grid-template-rows: [linea-r1] auto [linea-r2] auto[linea-r3] auto  [linea-r4];

  }

  .grid-line-names .item:nth-child(3){
    color: cyan;
    /* para expandir los item usamos o grid-row, grid-column, asignando el nombre de las lineas*/

    grid-row: linea-r3/linea-r4;
    grid-column: linea-c1/linea-c4;

    /* el atajo grid-area no funciona con grids nomeados */
    /* grid-area: No funciona ; */
  }